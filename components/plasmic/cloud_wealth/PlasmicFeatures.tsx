// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7iST1GVY7MEDdpjnrPuCNJ
// Component: mczTONmdaSY7ux
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: 9KxG1LQhTfZ-fr/component
import CwFooter from "../../CwFooter"; // plasmic-import: wco-GCH2Qp/component

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_cloud_wealth.module.css"; // plasmic-import: 7iST1GVY7MEDdpjnrPuCNJ/projectcss
import sty from "./PlasmicFeatures.module.css"; // plasmic-import: mczTONmdaSY7ux/css

import Frame2Icon from "./icons/PlasmicIcon__Frame2"; // plasmic-import: qj-ol9MQOa/icon
import FrameIcon from "./icons/PlasmicIcon__Frame"; // plasmic-import: c5agkyIrXU/icon
import Group19Icon from "./icons/PlasmicIcon__Group19"; // plasmic-import: 2iJ2OdAjWV/icon
import Group20Icon from "./icons/PlasmicIcon__Group20"; // plasmic-import: 4mTG16P1g3/icon
import Line29Icon from "./icons/PlasmicIcon__Line29"; // plasmic-import: o8cOraGh7/icon

export type PlasmicFeatures__VariantMembers = {};
export type PlasmicFeatures__VariantsArgs = {};
type VariantPropType = keyof PlasmicFeatures__VariantsArgs;
export const PlasmicFeatures__VariantProps = new Array<VariantPropType>();

export type PlasmicFeatures__ArgsType = {};
type ArgPropType = keyof PlasmicFeatures__ArgsType;
export const PlasmicFeatures__ArgProps = new Array<ArgPropType>();

export type PlasmicFeatures__OverridesType = {
  root?: p.Flex<"div">;
  header?: p.Flex<typeof Header>;
  featureBoxHero?: p.Flex<"div">;
  gradient1?: p.Flex<"div">;
  layer2?: p.Flex<"div">;
  layer1?: p.Flex<"div">;
  rectangle?: p.Flex<"div">;
  rectangle23?: p.Flex<"div">;
  rectangle26?: p.Flex<"div">;
  group6?: p.Flex<"div">;
  scheduleYourFreeDemo?: p.Flex<"div">;
  bringToTheTableWinWinSurvivalStrategiesToEnsureProactiveDominationAtTheEndOfTheDayGoingForwardANewNormalThatHasEvolvedFromGenerationXIsOnTheRunwayHeadingTowardsAStreamlinedCloudSolution?: p.Flex<"div">;
  button?: p.Flex<"div">;
  button2?: p.Flex<"div">;
  rectangle27?: p.Flex<"div">;
  rectangle31?: p.Flex<"div">;
  rectangle28?: p.Flex<"div">;
  rectangle29?: p.Flex<"div">;
  rectangle30?: p.Flex<"div">;
  figmaPaste?: p.Flex<"div">;
  accordingMenu?: p.Flex<"div">;
  frame22?: p.Flex<"div">;
  frame20?: p.Flex<"div">;
  frame21?: p.Flex<"div">;
  frame23?: p.Flex<"div">;
  frame24?: p.Flex<"div">;
  frame25?: p.Flex<"div">;
  frame26?: p.Flex<"div">;
  cwFooter?: p.Flex<typeof CwFooter>;
};

export interface DefaultFeaturesProps {}

function PlasmicFeatures__RenderFunc(props: {
  variants: PlasmicFeatures__VariantsArgs;
  args: PlasmicFeatures__ArgsType;
  overrides: PlasmicFeatures__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <div
            data-plasmic-name={"featureBoxHero"}
            data-plasmic-override={overrides.featureBoxHero}
            className={classNames(projectcss.all, sty.featureBoxHero)}
          >
            <div
              data-plasmic-name={"gradient1"}
              data-plasmic-override={overrides.gradient1}
              className={classNames(projectcss.all, sty.gradient1)}
            >
              <div
                data-plasmic-name={"layer2"}
                data-plasmic-override={overrides.layer2}
                className={classNames(projectcss.all, sty.layer2)}
              >
                <div
                  data-plasmic-name={"layer1"}
                  data-plasmic-override={overrides.layer1}
                  className={classNames(projectcss.all, sty.layer1)}
                >
                  <div
                    data-plasmic-name={"rectangle"}
                    data-plasmic-override={overrides.rectangle}
                    className={classNames(projectcss.all, sty.rectangle)}
                  />
                </div>
              </div>
            </div>

            <div
              data-plasmic-name={"rectangle23"}
              data-plasmic-override={overrides.rectangle23}
              className={classNames(projectcss.all, sty.rectangle23)}
            />

            <div
              data-plasmic-name={"rectangle26"}
              data-plasmic-override={overrides.rectangle26}
              className={classNames(projectcss.all, sty.rectangle26)}
            />

            <div
              data-plasmic-name={"group6"}
              data-plasmic-override={overrides.group6}
              className={classNames(projectcss.all, sty.group6)}
            >
              <div
                data-plasmic-name={"scheduleYourFreeDemo"}
                data-plasmic-override={overrides.scheduleYourFreeDemo}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.scheduleYourFreeDemo
                )}
              >
                {"Schedule Your\nFree  Demo! "}
              </div>

              <div
                data-plasmic-name={
                  "bringToTheTableWinWinSurvivalStrategiesToEnsureProactiveDominationAtTheEndOfTheDayGoingForwardANewNormalThatHasEvolvedFromGenerationXIsOnTheRunwayHeadingTowardsAStreamlinedCloudSolution"
                }
                data-plasmic-override={
                  overrides.bringToTheTableWinWinSurvivalStrategiesToEnsureProactiveDominationAtTheEndOfTheDayGoingForwardANewNormalThatHasEvolvedFromGenerationXIsOnTheRunwayHeadingTowardsAStreamlinedCloudSolution
                }
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.bringToTheTableWinWinSurvivalStrategiesToEnsureProactiveDominationAtTheEndOfTheDayGoingForwardANewNormalThatHasEvolvedFromGenerationXIsOnTheRunwayHeadingTowardsAStreamlinedCloudSolution
                )}
              >
                {
                  "Bring to the table win-win survival strategies to ensure proactive domination. At the end of the day, going forward, a new normal that has evolved from generation X is on the runway heading towards a streamlined cloud solution. "
                }
              </div>
            </div>

            <p.Stack
              as={"div"}
              data-plasmic-name={"button"}
              data-plasmic-override={overrides.button}
              hasGap={true}
              className={classNames(projectcss.all, sty.button)}
            >
              <div
                data-plasmic-name={"button2"}
                data-plasmic-override={overrides.button2}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.button2
                )}
              >
                {"Letâ€™s get you Started"}
              </div>
            </p.Stack>

            <div
              data-plasmic-name={"rectangle27"}
              data-plasmic-override={overrides.rectangle27}
              className={classNames(projectcss.all, sty.rectangle27)}
            >
              <div
                data-plasmic-name={"rectangle31"}
                data-plasmic-override={overrides.rectangle31}
                className={classNames(projectcss.all, sty.rectangle31)}
              />
            </div>

            <div
              data-plasmic-name={"rectangle28"}
              data-plasmic-override={overrides.rectangle28}
              className={classNames(projectcss.all, sty.rectangle28)}
            />

            <div
              data-plasmic-name={"rectangle29"}
              data-plasmic-override={overrides.rectangle29}
              className={classNames(projectcss.all, sty.rectangle29)}
            />

            <div
              data-plasmic-name={"rectangle30"}
              data-plasmic-override={overrides.rectangle30}
              className={classNames(projectcss.all, sty.rectangle30)}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__jNoPd
              )}
            >
              {"Automated \nKYC"}
            </div>

            <Frame2Icon
              className={classNames(projectcss.all, sty.svg__x0DyU)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__yMM
              )}
            >
              {"Automated Document Generation"}
            </div>

            <FrameIcon
              className={classNames(projectcss.all, sty.svg__zbunh)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___5XpAq
              )}
            >
              {"Optimized Client Relationship Management"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___87WDe
              )}
            >
              {"Secure cloud\nsolution"}
            </div>

            <Group19Icon
              className={classNames(projectcss.all, sty.svg__m5Dm2)}
              role={"img"}
            />

            <Group20Icon
              className={classNames(projectcss.all, sty.svg__rccc6)}
              role={"img"}
            />
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__ezav)}>
            <div
              data-plasmic-name={"figmaPaste"}
              data-plasmic-override={overrides.figmaPaste}
              className={classNames(projectcss.all, sty.figmaPaste)}
            >
              <div
                data-plasmic-name={"accordingMenu"}
                data-plasmic-override={overrides.accordingMenu}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.accordingMenu
                )}
              >
                {
                  "Automated Document Generation\n\nAutomated KYC \n\nhigh level overviews\n\nIterative approaches\n\nproactive domination\n\nworkplace diversity\n\nI havenâ€™t managed to prototype this they way itâ€™s supposed to be built. The nav above is supposed to be sticky and the highlighted text should switch as that section scrolls into view.\nAs shown here."
                }
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame22"}
                data-plasmic-override={overrides.frame22}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame22)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame20"}
                  data-plasmic-override={overrides.frame20}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame20)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qyPDg
                    )}
                  >
                    {"Automated Document Generation"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__w5BoC
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {
                          "Generate Trust Deeds, Wills and  Estate Plans and reports at the Click of a Button"
                        }
                      </span>
                      <React.Fragment>
                        {
                          "\nCross-functional, automated wizard retrieving up to date external information and calculations from industry standard tools.\n\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Industry-Leading Financial Calculations"}
                      </span>
                      <React.Fragment>
                        {
                          "\nEnsure proactive domination. At the end of the day, going forward, a new normal that has evolved from generation X is on the runway heading towards a streamlined cloud solution. User generated content in real-time will have multiple touchpoints for offshoring.\n\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Scenario Planning"}
                      </span>
                      <React.Fragment>
                        {
                          "\nIdentify a ballpark value added activity to beta test. Override the digital divide with additional clickthroughs from DevOps. Nanotechnology immersion along the information highway will close the loop on focusing solely on the bottom line."
                        }
                      </React.Fragment>
                    </React.Fragment>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__cykoH)}
                  >
                    <Line29Icon
                      className={classNames(projectcss.all, sty.svg__vyGtY)}
                      role={"img"}
                    />
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame21"}
                  data-plasmic-override={overrides.frame21}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame21)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jQeD4
                    )}
                  >
                    {"Automated KYC"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mgbGl
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Engage with customers who are Ready for business"}
                      </span>
                      <React.Fragment>
                        {
                          "\nReduce onboarding turn-around with digitally pre-verified customers.   \n\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Digital Identity Verification "}
                      </span>
                      <React.Fragment>
                        {"\nYour clients are able to safely \n\n"}
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Capitalize on low hanging fruit "}
                      </span>
                      <React.Fragment>
                        {
                          "\nIdentify a ballpark value added activity to beta test. Override the digital divide with additional clickthroughs from DevOps. Nanotechnology immersion along the information highway will close the loop on focusing solely on the bottom line."
                        }
                      </React.Fragment>
                    </React.Fragment>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__gyuCl)}
                  >
                    <Line29Icon
                      className={classNames(projectcss.all, sty.svg__iOq2Z)}
                      role={"img"}
                    />
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame23"}
                  data-plasmic-override={overrides.frame23}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame23)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nksDc
                    )}
                  >
                    {"High Level Overviews"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lXnZf
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Leverage agile frameworks"}
                      </span>
                      <React.Fragment>
                        {
                          "\nTo provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collaborative thinking to further the overall value proposition. Organically grow the holistic world view of disruptive innovation via workplace diversity and empowerment.\n\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Bring to the table win-win survival strategies "}
                      </span>
                      <React.Fragment>
                        {
                          "\nEnsure proactive domination. At the end of the day, going forward, a new normal that has evolved from generation X is on the runway heading towards a streamlined cloud solution. User generated content in real-time will have multiple touchpoints for offshoring.\n\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Capitalize on low hanging fruit "}
                      </span>
                      <React.Fragment>
                        {
                          "\nIdentify a ballpark value added activity to beta test. Override the digital divide with additional clickthroughs from DevOps. Nanotechnology immersion along the information highway will close the loop on focusing solely on the bottom line."
                        }
                      </React.Fragment>
                    </React.Fragment>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__p7Xfb)}
                  >
                    <Line29Icon
                      className={classNames(projectcss.all, sty.svg___31CDc)}
                      role={"img"}
                    />
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame24"}
                  data-plasmic-override={overrides.frame24}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame24)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1F4Zy
                    )}
                  >
                    {"Iterative Approaches"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mpZz
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Leverage agile frameworks"}
                      </span>
                      <React.Fragment>
                        {
                          "\nTo provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collaborative thinking to further the overall value proposition. Organically grow the holistic world view of disruptive innovation via workplace diversity and empowerment.\n\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Bring to the table win-win survival strategies "}
                      </span>
                      <React.Fragment>
                        {
                          "\nEnsure proactive domination. At the end of the day, going forward, a new normal that has evolved from generation X is on the runway heading towards a streamlined cloud solution. User generated content in real-time will have multiple touchpoints for offshoring.\n\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Capitalize on low hanging fruit "}
                      </span>
                      <React.Fragment>
                        {
                          "\nIdentify a ballpark value added activity to beta test. Override the digital divide with additional clickthroughs from DevOps. Nanotechnology immersion along the information highway will close the loop on focusing solely on the bottom line."
                        }
                      </React.Fragment>
                    </React.Fragment>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__pKboj)}
                  >
                    <Line29Icon
                      className={classNames(projectcss.all, sty.svg__rTi7U)}
                      role={"img"}
                    />
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame25"}
                  data-plasmic-override={overrides.frame25}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame25)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__m4Eej
                    )}
                  >
                    {"Proactive Domination"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zN5Sz
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Leverage agile frameworks"}
                      </span>
                      <React.Fragment>
                        {
                          "\nTo provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collaborative thinking to further the overall value proposition. Organically grow the holistic world view of disruptive innovation via workplace diversity and empowerment.\n\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Bring to the table win-win survival strategies "}
                      </span>
                      <React.Fragment>
                        {
                          "\nEnsure proactive domination. At the end of the day, going forward, a new normal that has evolved from generation X is on the runway heading towards a streamlined cloud solution. User generated content in real-time will have multiple touchpoints for offshoring.\n\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Capitalize on low hanging fruit "}
                      </span>
                      <React.Fragment>
                        {
                          "\nIdentify a ballpark value added activity to beta test. Override the digital divide with additional clickthroughs from DevOps. Nanotechnology immersion along the information highway will close the loop on focusing solely on the bottom line."
                        }
                      </React.Fragment>
                    </React.Fragment>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__pfauJ)}
                  >
                    <Line29Icon
                      className={classNames(projectcss.all, sty.svg__mxd1T)}
                      role={"img"}
                    />
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame26"}
                  data-plasmic-override={overrides.frame26}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame26)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pdk3J
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Leverage agile frameworks"}
                      </span>
                      <React.Fragment>
                        {
                          "\nTo provide a robust synopsis for high level overviews. Iterative approaches to corporate strategy foster collaborative thinking to further the overall value proposition. Organically grow the holistic world view of disruptive innovation via workplace diversity and empowerment.\n\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Bring to the table win-win survival strategies "}
                      </span>
                      <React.Fragment>
                        {
                          "\nEnsure proactive domination. At the end of the day, going forward, a new normal that has evolved from generation X is on the runway heading towards a streamlined cloud solution. User generated content in real-time will have multiple touchpoints for offshoring."
                        }
                      </React.Fragment>
                    </React.Fragment>
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pkdae
                    )}
                  >
                    {"Workplace Diversity"}
                  </div>
                </p.Stack>
              </p.Stack>
            </div>
          </div>

          <CwFooter
            data-plasmic-name={"cwFooter"}
            data-plasmic-override={overrides.cwFooter}
            className={classNames("__wab_instance", sty.cwFooter)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "featureBoxHero",
    "gradient1",
    "layer2",
    "layer1",
    "rectangle",
    "rectangle23",
    "rectangle26",
    "group6",
    "scheduleYourFreeDemo",
    "bringToTheTableWinWinSurvivalStrategiesToEnsureProactiveDominationAtTheEndOfTheDayGoingForwardANewNormalThatHasEvolvedFromGenerationXIsOnTheRunwayHeadingTowardsAStreamlinedCloudSolution",
    "button",
    "button2",
    "rectangle27",
    "rectangle31",
    "rectangle28",
    "rectangle29",
    "rectangle30",
    "figmaPaste",
    "accordingMenu",
    "frame22",
    "frame20",
    "frame21",
    "frame23",
    "frame24",
    "frame25",
    "frame26",
    "cwFooter"
  ],
  header: ["header"],
  featureBoxHero: [
    "featureBoxHero",
    "gradient1",
    "layer2",
    "layer1",
    "rectangle",
    "rectangle23",
    "rectangle26",
    "group6",
    "scheduleYourFreeDemo",
    "bringToTheTableWinWinSurvivalStrategiesToEnsureProactiveDominationAtTheEndOfTheDayGoingForwardANewNormalThatHasEvolvedFromGenerationXIsOnTheRunwayHeadingTowardsAStreamlinedCloudSolution",
    "button",
    "button2",
    "rectangle27",
    "rectangle31",
    "rectangle28",
    "rectangle29",
    "rectangle30"
  ],
  gradient1: ["gradient1", "layer2", "layer1", "rectangle"],
  layer2: ["layer2", "layer1", "rectangle"],
  layer1: ["layer1", "rectangle"],
  rectangle: ["rectangle"],
  rectangle23: ["rectangle23"],
  rectangle26: ["rectangle26"],
  group6: [
    "group6",
    "scheduleYourFreeDemo",
    "bringToTheTableWinWinSurvivalStrategiesToEnsureProactiveDominationAtTheEndOfTheDayGoingForwardANewNormalThatHasEvolvedFromGenerationXIsOnTheRunwayHeadingTowardsAStreamlinedCloudSolution"
  ],
  scheduleYourFreeDemo: ["scheduleYourFreeDemo"],
  bringToTheTableWinWinSurvivalStrategiesToEnsureProactiveDominationAtTheEndOfTheDayGoingForwardANewNormalThatHasEvolvedFromGenerationXIsOnTheRunwayHeadingTowardsAStreamlinedCloudSolution:
    [
      "bringToTheTableWinWinSurvivalStrategiesToEnsureProactiveDominationAtTheEndOfTheDayGoingForwardANewNormalThatHasEvolvedFromGenerationXIsOnTheRunwayHeadingTowardsAStreamlinedCloudSolution"
    ],
  button: ["button", "button2"],
  button2: ["button2"],
  rectangle27: ["rectangle27", "rectangle31"],
  rectangle31: ["rectangle31"],
  rectangle28: ["rectangle28"],
  rectangle29: ["rectangle29"],
  rectangle30: ["rectangle30"],
  figmaPaste: [
    "figmaPaste",
    "accordingMenu",
    "frame22",
    "frame20",
    "frame21",
    "frame23",
    "frame24",
    "frame25",
    "frame26"
  ],
  accordingMenu: ["accordingMenu"],
  frame22: [
    "frame22",
    "frame20",
    "frame21",
    "frame23",
    "frame24",
    "frame25",
    "frame26"
  ],
  frame20: ["frame20"],
  frame21: ["frame21"],
  frame23: ["frame23"],
  frame24: ["frame24"],
  frame25: ["frame25"],
  frame26: ["frame26"],
  cwFooter: ["cwFooter"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: typeof Header;
  featureBoxHero: "div";
  gradient1: "div";
  layer2: "div";
  layer1: "div";
  rectangle: "div";
  rectangle23: "div";
  rectangle26: "div";
  group6: "div";
  scheduleYourFreeDemo: "div";
  bringToTheTableWinWinSurvivalStrategiesToEnsureProactiveDominationAtTheEndOfTheDayGoingForwardANewNormalThatHasEvolvedFromGenerationXIsOnTheRunwayHeadingTowardsAStreamlinedCloudSolution: "div";
  button: "div";
  button2: "div";
  rectangle27: "div";
  rectangle31: "div";
  rectangle28: "div";
  rectangle29: "div";
  rectangle30: "div";
  figmaPaste: "div";
  accordingMenu: "div";
  frame22: "div";
  frame20: "div";
  frame21: "div";
  frame23: "div";
  frame24: "div";
  frame25: "div";
  frame26: "div";
  cwFooter: typeof CwFooter;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicFeatures__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicFeatures__VariantsArgs;
    args?: PlasmicFeatures__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicFeatures__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicFeatures__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicFeatures__ArgProps,
          internalVariantPropNames: PlasmicFeatures__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicFeatures__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFeatures";
  } else {
    func.displayName = `PlasmicFeatures.${nodeName}`;
  }
  return func;
}

export const PlasmicFeatures = Object.assign(
  // Top-level PlasmicFeatures renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    featureBoxHero: makeNodeComponent("featureBoxHero"),
    gradient1: makeNodeComponent("gradient1"),
    layer2: makeNodeComponent("layer2"),
    layer1: makeNodeComponent("layer1"),
    rectangle: makeNodeComponent("rectangle"),
    rectangle23: makeNodeComponent("rectangle23"),
    rectangle26: makeNodeComponent("rectangle26"),
    group6: makeNodeComponent("group6"),
    scheduleYourFreeDemo: makeNodeComponent("scheduleYourFreeDemo"),
    bringToTheTableWinWinSurvivalStrategiesToEnsureProactiveDominationAtTheEndOfTheDayGoingForwardANewNormalThatHasEvolvedFromGenerationXIsOnTheRunwayHeadingTowardsAStreamlinedCloudSolution:
      makeNodeComponent(
        "bringToTheTableWinWinSurvivalStrategiesToEnsureProactiveDominationAtTheEndOfTheDayGoingForwardANewNormalThatHasEvolvedFromGenerationXIsOnTheRunwayHeadingTowardsAStreamlinedCloudSolution"
      ),
    button: makeNodeComponent("button"),
    button2: makeNodeComponent("button2"),
    rectangle27: makeNodeComponent("rectangle27"),
    rectangle31: makeNodeComponent("rectangle31"),
    rectangle28: makeNodeComponent("rectangle28"),
    rectangle29: makeNodeComponent("rectangle29"),
    rectangle30: makeNodeComponent("rectangle30"),
    figmaPaste: makeNodeComponent("figmaPaste"),
    accordingMenu: makeNodeComponent("accordingMenu"),
    frame22: makeNodeComponent("frame22"),
    frame20: makeNodeComponent("frame20"),
    frame21: makeNodeComponent("frame21"),
    frame23: makeNodeComponent("frame23"),
    frame24: makeNodeComponent("frame24"),
    frame25: makeNodeComponent("frame25"),
    frame26: makeNodeComponent("frame26"),
    cwFooter: makeNodeComponent("cwFooter"),

    // Metadata about props expected for PlasmicFeatures
    internalVariantProps: PlasmicFeatures__VariantProps,
    internalArgProps: PlasmicFeatures__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicFeatures;
/* prettier-ignore-end */
