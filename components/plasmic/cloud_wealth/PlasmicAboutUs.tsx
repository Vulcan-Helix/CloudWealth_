// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7iST1GVY7MEDdpjnrPuCNJ
// Component: usnjWL1GOuiDvi
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: 9KxG1LQhTfZ-fr/component
import Footer from "../../Footer"; // plasmic-import: JfbLrw7cZCfTIu/component
import FooterDesktop1 from "../../FooterDesktop1"; // plasmic-import: B3-gyon6yF/component
import PrivacyPolicyLinks from "../../PrivacyPolicyLinks"; // plasmic-import: fiOxnTwhXt/component
import FooterLine from "../../FooterLine"; // plasmic-import: gE7AkFiVSK/component
import Disclaimer from "../../Disclaimer"; // plasmic-import: 2ULwZ9_GVV/component

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_cloud_wealth.module.css"; // plasmic-import: 7iST1GVY7MEDdpjnrPuCNJ/projectcss
import sty from "./PlasmicAboutUs.module.css"; // plasmic-import: usnjWL1GOuiDvi/css

export type PlasmicAboutUs__VariantMembers = {};
export type PlasmicAboutUs__VariantsArgs = {};
type VariantPropType = keyof PlasmicAboutUs__VariantsArgs;
export const PlasmicAboutUs__VariantProps = new Array<VariantPropType>();

export type PlasmicAboutUs__ArgsType = {};
type ArgPropType = keyof PlasmicAboutUs__ArgsType;
export const PlasmicAboutUs__ArgProps = new Array<ArgPropType>();

export type PlasmicAboutUs__OverridesType = {
  root?: p.Flex<"div">;
  header?: p.Flex<typeof Header>;
  figmaPaste?: p.Flex<"div">;
  gradient1?: p.Flex<"div">;
  layer2?: p.Flex<"div">;
  layer1?: p.Flex<"div">;
  rectangle?: p.Flex<"div">;
  rectangle23?: p.Flex<"div">;
  frame7?: p.Flex<"div">;
  footer?: p.Flex<typeof Footer>;
  figmaPaste2?: p.Flex<"div">;
  pill?: p.Flex<"div">;
  pill2?: p.Flex<"div">;
  rectangle20?: p.Flex<"div">;
  pill3?: p.Flex<"div">;
  pill4?: p.Flex<"div">;
  privacyPolicyLinks?: p.Flex<typeof PrivacyPolicyLinks>;
  footerLine?: p.Flex<typeof FooterLine>;
  disclaimer?: p.Flex<typeof Disclaimer>;
};

export interface DefaultAboutUsProps {}

function PlasmicAboutUs__RenderFunc(props: {
  variants: PlasmicAboutUs__VariantsArgs;
  args: PlasmicAboutUs__ArgsType;
  overrides: PlasmicAboutUs__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <div className={classNames(projectcss.all, sty.freeBox__dyR)}>
            <div
              data-plasmic-name={"figmaPaste"}
              data-plasmic-override={overrides.figmaPaste}
              className={classNames(projectcss.all, sty.figmaPaste)}
            >
              <div
                data-plasmic-name={"gradient1"}
                data-plasmic-override={overrides.gradient1}
                className={classNames(projectcss.all, sty.gradient1)}
              >
                <div
                  data-plasmic-name={"layer2"}
                  data-plasmic-override={overrides.layer2}
                  className={classNames(projectcss.all, sty.layer2)}
                >
                  <div
                    data-plasmic-name={"layer1"}
                    data-plasmic-override={overrides.layer1}
                    className={classNames(projectcss.all, sty.layer1)}
                  >
                    <div
                      data-plasmic-name={"rectangle"}
                      data-plasmic-override={overrides.rectangle}
                      className={classNames(projectcss.all, sty.rectangle)}
                    />
                  </div>
                </div>
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xqo6N
                )}
              >
                {
                  "A new generation Family Office  \ntool with unmatched capabilities"
                }
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__uDAc
                )}
              >
                {
                  "Gone are the days of frantically switching between multiple apps to accomplish a single task. Instead, you can drastically reduce the time spent doing administrative tasks by using CloudWealth.\nPlan, schedule and attend virtual meetings, send messages, manage your diary, generate reports, store files and do calculations all on one safe and secure  virtual platform designed for ease of use."
                }
              </div>

              <div
                data-plasmic-name={"rectangle23"}
                data-plasmic-override={overrides.rectangle23}
                className={classNames(projectcss.all, sty.rectangle23)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame7"}
                  data-plasmic-override={overrides.frame7}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame7)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__hSa0S)}
                    displayHeight={"381.073px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"382.829px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/cloud_wealth/images/financialAdvisor11Png.png",
                      fullWidth: 385,
                      fullHeight: 381,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__mhV8K)}
                    displayHeight={"381.073px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"384.585px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/cloud_wealth/images/family1Png.png",
                      fullWidth: 384,
                      fullHeight: 381,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__lGwnj)}
                    displayHeight={"381.073px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"384.585px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/cloud_wealth/images/grandparents1Png.png",
                      fullWidth: 384,
                      fullHeight: 381,
                      aspectRatio: undefined
                    }}
                  />
                </p.Stack>
              </div>
            </div>
          </div>

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />

          <div
            data-plasmic-name={"figmaPaste2"}
            data-plasmic-override={overrides.figmaPaste2}
            className={classNames(projectcss.all, sty.figmaPaste2)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__g5UnA
              )}
            >
              <React.Fragment>
                <React.Fragment>{""}</React.Fragment>
                {
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__qJ8Q
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#0F5CBF" }}
                      >
                        {"Relationship Focussed"}
                      </span>
                    </React.Fragment>
                  </h2>
                }
                <React.Fragment>
                  {
                    "\nRelationships are at the core of what we do. We believe that Family Offices are about relationships and trust.\n\nBy being able to privately and securely send and receive electronic documents , end-to-end encrypted messaging and the ability to do accurate calculations in a timely manner helps increase trust, reduces the risk of data theft and makes this tool suited for family office service providers or private individuals with financial acumen."
                  }
                </React.Fragment>
              </React.Fragment>
            </div>

            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__t0TWr)}
              displayHeight={"506px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"499px" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/cloud_wealth/images/groupChat1Png.png",
                fullWidth: 499,
                fullHeight: 506,
                aspectRatio: undefined
              }}
            />

            <p.Stack
              as={"div"}
              data-plasmic-name={"pill"}
              data-plasmic-override={overrides.pill}
              hasGap={true}
              className={classNames(projectcss.all, sty.pill)}
            >
              <div
                data-plasmic-name={"pill2"}
                data-plasmic-override={overrides.pill2}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.pill2
                )}
              >
                {"how we do it"}
              </div>
            </p.Stack>

            <div
              data-plasmic-name={"rectangle20"}
              data-plasmic-override={overrides.rectangle20}
              className={classNames(projectcss.all, sty.rectangle20)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__t9Uix)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___5WpN3
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2__rBxAx
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#FFFFFF" }}
                          >
                            {"A Strategically Focussed Mindset"}
                          </span>
                        </React.Fragment>
                      </h2>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qlY4M
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#FFFFFF" }}
                    >
                      {
                        "According to a recent study conducted by Credit Suisse, “...Generational Family Wealth is most often created by planning strategically, on a consistent basis”. Create an effective, sustainable strategy by having the right information at your disposal. From Personal and Corporate Financial Planning, to Estate Planning, Trust Planning and everything in between, The CloudWealth array of calculators will arm you with more information than ever before."
                      }
                    </span>
                  </React.Fragment>
                </div>
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"pill3"}
                data-plasmic-override={overrides.pill3}
                hasGap={true}
                className={classNames(projectcss.all, sty.pill3)}
              >
                <div
                  data-plasmic-name={"pill4"}
                  data-plasmic-override={overrides.pill4}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.pill4
                  )}
                >
                  {"future-proof"}
                </div>
              </p.Stack>

              <div className={classNames(projectcss.all, sty.freeBox__jw1Fn)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img___5CbG2)}
                  displayHeight={"auto" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"auto" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/cloud_wealth/images/financialAdvisor21Png.png",
                    fullWidth: 499,
                    fullHeight: 506,
                    aspectRatio: undefined
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__hdNid)}
                  displayHeight={"301px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"556px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: "/plasmic/cloud_wealth/images/financialAdvisor31Png.png",
                    fullWidth: 556,
                    fullHeight: 301,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>

            <FooterDesktop1
              className={classNames(
                "__wab_instance",
                sty.footerDesktop1___9AfI
              )}
            />
          </div>

          <FooterDesktop1
            className={classNames("__wab_instance", sty.footerDesktop1__atRuh)}
          />

          <PrivacyPolicyLinks
            data-plasmic-name={"privacyPolicyLinks"}
            data-plasmic-override={overrides.privacyPolicyLinks}
            className={classNames("__wab_instance", sty.privacyPolicyLinks)}
          />

          <FooterLine
            data-plasmic-name={"footerLine"}
            data-plasmic-override={overrides.footerLine}
            className={classNames("__wab_instance", sty.footerLine)}
          />

          <Disclaimer
            data-plasmic-name={"disclaimer"}
            data-plasmic-override={overrides.disclaimer}
            className={classNames("__wab_instance", sty.disclaimer)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "figmaPaste",
    "gradient1",
    "layer2",
    "layer1",
    "rectangle",
    "rectangle23",
    "frame7",
    "footer",
    "figmaPaste2",
    "pill",
    "pill2",
    "rectangle20",
    "pill3",
    "pill4",
    "privacyPolicyLinks",
    "footerLine",
    "disclaimer"
  ],
  header: ["header"],
  figmaPaste: [
    "figmaPaste",
    "gradient1",
    "layer2",
    "layer1",
    "rectangle",
    "rectangle23",
    "frame7"
  ],
  gradient1: ["gradient1", "layer2", "layer1", "rectangle"],
  layer2: ["layer2", "layer1", "rectangle"],
  layer1: ["layer1", "rectangle"],
  rectangle: ["rectangle"],
  rectangle23: ["rectangle23", "frame7"],
  frame7: ["frame7"],
  footer: ["footer"],
  figmaPaste2: [
    "figmaPaste2",
    "pill",
    "pill2",
    "rectangle20",
    "pill3",
    "pill4"
  ],
  pill: ["pill", "pill2"],
  pill2: ["pill2"],
  rectangle20: ["rectangle20", "pill3", "pill4"],
  pill3: ["pill3", "pill4"],
  pill4: ["pill4"],
  privacyPolicyLinks: ["privacyPolicyLinks"],
  footerLine: ["footerLine"],
  disclaimer: ["disclaimer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: typeof Header;
  figmaPaste: "div";
  gradient1: "div";
  layer2: "div";
  layer1: "div";
  rectangle: "div";
  rectangle23: "div";
  frame7: "div";
  footer: typeof Footer;
  figmaPaste2: "div";
  pill: "div";
  pill2: "div";
  rectangle20: "div";
  pill3: "div";
  pill4: "div";
  privacyPolicyLinks: typeof PrivacyPolicyLinks;
  footerLine: typeof FooterLine;
  disclaimer: typeof Disclaimer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicAboutUs__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicAboutUs__VariantsArgs;
    args?: PlasmicAboutUs__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicAboutUs__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicAboutUs__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicAboutUs__ArgProps,
          internalVariantPropNames: PlasmicAboutUs__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicAboutUs__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicAboutUs";
  } else {
    func.displayName = `PlasmicAboutUs.${nodeName}`;
  }
  return func;
}

export const PlasmicAboutUs = Object.assign(
  // Top-level PlasmicAboutUs renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    figmaPaste: makeNodeComponent("figmaPaste"),
    gradient1: makeNodeComponent("gradient1"),
    layer2: makeNodeComponent("layer2"),
    layer1: makeNodeComponent("layer1"),
    rectangle: makeNodeComponent("rectangle"),
    rectangle23: makeNodeComponent("rectangle23"),
    frame7: makeNodeComponent("frame7"),
    footer: makeNodeComponent("footer"),
    figmaPaste2: makeNodeComponent("figmaPaste2"),
    pill: makeNodeComponent("pill"),
    pill2: makeNodeComponent("pill2"),
    rectangle20: makeNodeComponent("rectangle20"),
    pill3: makeNodeComponent("pill3"),
    pill4: makeNodeComponent("pill4"),
    privacyPolicyLinks: makeNodeComponent("privacyPolicyLinks"),
    footerLine: makeNodeComponent("footerLine"),
    disclaimer: makeNodeComponent("disclaimer"),

    // Metadata about props expected for PlasmicAboutUs
    internalVariantProps: PlasmicAboutUs__VariantProps,
    internalArgProps: PlasmicAboutUs__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicAboutUs;
/* prettier-ignore-end */
